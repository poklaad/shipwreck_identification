% Здесь реализовано преобразование функции восстанавливающего момента коробля

f1 = figure;
s = -2; % левая/нижняя граница графика
f = 2; % правая/верхняя граница графика
k = 1000; % количество точек на графике
N = 500; % количество итераций преобразования графика
step = (f-s)/k;
x = s:step:f;
pose1 = 1;
pose2 = 6;

% a0, a1, a3, a5 - коэффициенты полинома пятого порядка, задающего функцию восстанавливающего момента коробля.
% Порядок типов остойчивости: 

% 	1-ый неповрежденный     1-ый		2-ой		3-ий		4-ый		5-ый

a0=[		0               0           -0.2		0       	-0.2 		0.07]; 
a1=[		0.64            0.25		0.64		-0.64		-0.64		-0.64]; 
a3=[		-0.1            -0.1		-0.1 		2.5 		2.5 		2.5]; 
a5=[		-0.07           -0.05		-0.07		-1.3		-1.3		-1.3];

for i=0:N
    % proc - процент прошедшего времени. Используется для вычисления нынешнего значения коэффициентов диаграммы остойчивости
    proc = i/N;
    proc = 0;
    if proc >= 0.8
        a =5;
    end
    % recovery - нынешние коэффициенты функции восстанавливающего момента.
    recovery = [a0(pose1) + ((a0(pose2) - a0(pose1)) * proc) 
            	a1(pose1) + ((a1(pose2)-a1(pose1)) * proc) 
            	0 
                a3(pose1) + ((a3(pose2)-a3(pose1)) * proc) 
                0 
                a5(pose1) + ((a5(pose2)-a5(pose1)) * proc) 
                ];
    y = recovery(1) + recovery(2) * x + recovery(4) * x.^3 + recovery(6) * x.^5;
    
    % отображаются сам график и оси Ох и Оу
    figure(f1)
    clf(f1);
    hold on
    %plot(x, y, "b")
    %plot (zeros(k+1, 1), x, 'k')
    %plot (x, zeros(k+1, 1), 'k')
    plot(x, y, "b", 'LineWidth', 5)
    plot (zeros(k+1, 1), x, 'k', 'LineWidth', 3)
    plot (x, zeros(k+1, 1), 'k', 'LineWidth', 3)
    axis([s f s f])
    drawnow
    grid on
    hold off
end