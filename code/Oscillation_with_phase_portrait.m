% Решается дифур 2-ого порядка: theta'' + nu*theta' + rec(theta,time) = A*cos(omega*time)

% A - параметр из дифура при cos - высота волнения
% alltime - длина отрезка моделирования
% nu - параметр из дифура при theta'
% omega - параметр из дифура в cos - частота волнения
% pose1 - начальный тип статической остойчивости коробля - всегда первый непорежденный
% pose2 - конечный тип статической остойчивости коробля
tic
alltime = 2000;
omega = 0.275;
A = 0.1;
nu = 0.1;
pose1 = 1;
pose2 = 5;
 


% a0, a1, a3, a5 - коэффициенты полинома пятого порядка, задающего диаграмму статической остойчивости коробля.
% Порядок типов остойчивости: 

% 	1-ый неповрежденный     1-ый		2-ой		3-ий		4-ый		5-ый

a0=[		0               0           -0.2		0           -0.07 		0.07]; 
a1=[		0.64        	0.25		0.64		-0.64		-0.64		-0.64]; 
a3=[		-0.1        	-0.1		-0.1 		2.5 		2.5 		2.5]; 
a5=[		-0.07       	-0.05		-0.07		-1.3		-1.3		-1.3];


% f1 - окно для фазового портрета колебаний корабля
% f2 - окно для реализации колебаний 

f1=figure;
f2=figure;


% theta_graph и d_theta_graph - массивы для сохранения функции колебаний корабля и ее производной соответственно
% time_graph - массив для сохранения моментов времени, в которых вычислена функция колебаний
theta_data = [];
d_theta_data = [];
time_data = [];


% expectation и dispersion - массивы для сохранения выборочного среднего и дисперсии колебаний
expectation = [0];
dispersion = [0];


% ind1, ind2 - вспомогательные премененные для сохранения индексов
% элементов в массиве time_dif, ближайших к целым значениям time. (задание time см. задание цикла)
ind1 = 1;
ind2 = 1;


% Цикл моделирует колебания корабля в процессе затопления
% step - шаг времени, который определяет, как часто берутся точки для
% построения графиков. С его помощью можно управлять частотой сбора данных.
% По умолчанию равен 1 секунде.
step = 0.5;

% start_time - параметр, определяющий момент начала моделирования. Нужен
% для случаев, когда интересует конкретный момент процесса, но запускать
% моделирование сначала и ждать его наступления долго. По умолчанию равен 1
start_time = 1;
y0_0 = 0;
y0_1 = 0;
for time = start_time:step:alltime
    % proc - процент прошедшего времени. Используется для вычисления нынешнего значения коэффициентов диаграммы остойчивости
    proc = time/alltime;

    % recovery - нынешние коэффициенты диаграммы остойчивости.
    recovery = [a0(pose1) + ((a0(pose2) - a0(pose1)) * proc) 
            a1(pose1) + ((a1(pose2)-a1(pose1)) * proc) 
            0 
            a3(pose1) + ((a3(pose2)-a3(pose1)) * proc) 
            0 
            a5(pose1) + ((a5(pose2)-a5(pose1)) * proc) 
            ];
    % DoDt - вспомогательная функция (расположена в конце программы, строка 76(проверить)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!) для вычисления дифура (строка 1) 
    [time_dif,theta_dif] = ode45(@(t,y) DoDt(t, y, omega, A, nu, recovery),[time-step time],[y0_0 y0_1]);

    % Поиск в массиве time_dif точки, ближайших к time
    [tmp ind1] = min(abs(time_dif - time));

    
    
    % Запись положения корабля в момент time
    
    % Каждому моменту времени соответствует одна точка на графике.
    % Точность/гладкость графика регулируется параметром step (строка 59).
    % Чем меньше step, тем более гладкий график, однако уменьшение step
    % отрицательно влияет на время работы программы.
    theta_data(end + 1) = theta_dif(ind1, 1);
    d_theta_data(end + 1) = theta_dif(ind1, 2);
    time_data(end + 1) = time_dif(ind1);
    y0_0 = theta_data(end);
    y0_1 = d_theta_data(end);

    % Вычисление выборочного среднего и дисперсии
    % Длина массива expectation на 1 больше требуемого из-за начального элемента 0 (см. инициализацию в строке 45). 
    % 0 необходим из-за вычисления выборочного среднего через само себя на первом шаге.
    len = length(expectation) - 1;
    expectation(end + 1) = (expectation(end) * len + theta_data(len + 1)) / (len + 1);
    dispersion(end + 1) = var(theta_data(1:(len + 1)));
   

    % Вывод графиков фазового портрета и колебаний корабля с выборочным средним и дисперсией
    figure(f1);
    %plot (theta_data, d_theta_data, "b", 'LineWidth', 1.5)
    plot (theta_data, d_theta_data, "b")
    axis([-1 1 -1 1])
    drawnow  

    figure(f2);
    hold on
    plot(time_data, theta_data, "b")
    %plot(time_data, theta_data, "b", 'LineWidth', 1.5)
    %plot(time_data, expectation(2:end), "r")
    %plot(time_data, dispersion(2:end), "g")
    hold off
      

end
toc


% DoDt реализует дифур 2-ого порядка в виде системы с заменой переменных:
% {d th(1)/ dt = th(2)
% {d th(2)/ dt = A*cos(omega*time) - nu*th(2) - recovery(th(1))

function DthetaDtime = DoDt(t, th, omega, A, nu, recovery)
    DthetaDtime = [th(2);A*cos(omega*t) - nu*th(2) - (recovery(1)+recovery(2)*th(1)+recovery(4)*th(1).^3+recovery(6)*th(1).^5)];
end